<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="loadGame.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AMzzkBwczXn+AAAAAElFTkSuQmCC
</value>
  </data>
</root>